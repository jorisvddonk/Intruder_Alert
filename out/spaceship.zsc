class Spaceship : MovableIAActor {
  int roting;
  bool thrusting;
  int lastRot;
  int lastThrust;

  override void PostBeginPlay()
  {
    Super.PostBeginPlay();
    mov = (0,0);
    ang = 0;
    roting = 0;
    lastRot = 0;
    lastThrust = 0;
    thrusting = false;
  }

  void setuPosition(Vector2 position) {
    self.uPosition = position;
  }

  void turn(int a) {
    roting = a;
  }

  void thrust(bool a) {
    thrusting = a;
  }

  void maybeRotate() {
    lastRot = lastRot - 1;
    if (lastRot <= 0) {
      if (roting != 0) {
        ang = ang + roting;
        lastRot = 10;
      }
    }
  }

  void maybeThrust() {
    lastThrust = lastThrust - 1;
    if (lastThrust <= 0) {
      if (thrusting) {
        mov = (mov.x + (sin(ang * (360 / 16))), mov.y + (cos(ang * (360 / 16))));
      }
    }
  }

  override void Tick() {
    maybeRotate();
    maybeThrust();
    Super.Tick();
  }
}
