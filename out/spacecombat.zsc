 class SpaceCombatHandler : EventHandler
 {
   override bool InputProcess(InputEvent e) {
    //Console.Printf("%i", e.KeyScan);
    if (e.KeyScan == 35) {
      if (e.Type == InputEvent.Type_KeyDown) {
        EventHandler.SendNetworkEvent("rotate", -1);
      } else {
        EventHandler.SendNetworkEvent("rotate", 0);
      }
      return true;
    }
    if (e.KeyScan == 33) {
      if (e.Type == InputEvent.Type_KeyDown) {
        EventHandler.SendNetworkEvent("rotate", 1);
      } else {
        EventHandler.SendNetworkEvent("rotate", 0);
      }
      return true;
    }
    if (e.KeyScan == 20) {
      if (e.Type == InputEvent.Type_KeyDown) {
        EventHandler.SendNetworkEvent("thrust", true);
      } else {
        EventHandler.SendNetworkEvent("thrust", false);
      }
      return true;
    }
    return false;
   }

   override void NetworkProcess (ConsoleEvent e)
   {
     let player = players [e.Player].mo;

    if (e.Name == "rotate") {
      ThinkerIterator t = ThinkerIterator.Create("EarthlingCruiser");
      EarthlingCruiser d;
      while (d = EarthlingCruiser(t.Next())) {
        d.turn(e.Args[0]);
      }
    }

    if (e.Name == "thrust") {
      ThinkerIterator t = ThinkerIterator.Create("EarthlingCruiser");
      EarthlingCruiser d;
      while (d = EarthlingCruiser(t.Next())) {
        d.thrust(e.Args[0]);
      }
    }
   }
 }

class BattleScreen: Actor {
  Default {
    +NOGRAVITY;
    +WALLSPRITE;
  }

  States {
    Spawn:
      TNT1 A 0;
      TNT1 A 0 {
        Vector3 spos = self.pos;
        spos.x = spos.x - 0.1; // prevent z-fighting with the base image. TODO: account for angle.
        EarthlingCruiser cruiser = EarthlingCruiser(Spawn("EarthlingCruiser", spos, NO_REPLACE));
        cruiser.setuPosition((0,0));

        Vector3 npos = self.pos;
        npos.y = npos.y - 20;
        npos.z = npos.z - 20;
        npos.x = npos.x - 0.1; // prevent z-fighting with the base image. TODO: account for angle.
        Nemesis nemesis = Nemesis(Spawn("Nemesis", npos, NO_REPLACE));
        nemesis.setuPosition((20,20));
        nemesis.setTarget(cruiser);
        nemesis.setPlayerShip(cruiser);

        for (int i = 0; i < 50; i++) {
          Vector3 starpos = self.pos;
          starpos.x = starpos.x - 0.05; // prevent z-fighting with the base image. TODO: account for angle.
          ParallaxStar star = ParallaxStar(Spawn("ParallaxStar", starpos, NO_REPLACE));
          star.setPlayerShip(cruiser);
          star.setposMultiplyFactor(1);
          if (Random(0, 2) <= 1) {
            star.setposMultiplyFactor(0.5);
          }
        }
      }
      SPAC A -1;
      stop;
  }
}
