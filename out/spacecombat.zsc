 class SpaceCombatHandler : EventHandler
 {
   override bool InputProcess(InputEvent e) {
    //Console.Printf("%i", e.KeyScan);
    if (e.KeyScan == 35) {
      if (e.Type == InputEvent.Type_KeyDown) {
        EventHandler.SendNetworkEvent("rotate", -1);
      } else {
        EventHandler.SendNetworkEvent("rotate", 0);
      }
      return true;
    }
    if (e.KeyScan == 33) {
      if (e.Type == InputEvent.Type_KeyDown) {
        EventHandler.SendNetworkEvent("rotate", 1);
      } else {
        EventHandler.SendNetworkEvent("rotate", 0);
      }
      return true;
    }
    if (e.KeyScan == 20) {
      if (e.Type == InputEvent.Type_KeyDown) {
        EventHandler.SendNetworkEvent("thrust", true);
      } else {
        EventHandler.SendNetworkEvent("thrust", false);
      }
      return true;
    }
    return false;
   }

   override void NetworkProcess (ConsoleEvent e)
   {
     let player = players [e.Player].mo;

    if (e.Name == "rotate") {
      ThinkerIterator t = ThinkerIterator.Create("EarthlingCruiser");
      EarthlingCruiser d;
      while (d = EarthlingCruiser(t.Next())) {
        d.turn(e.Args[0]);
      }
    }

    if (e.Name == "thrust") {
      ThinkerIterator t = ThinkerIterator.Create("EarthlingCruiser");
      EarthlingCruiser d;
      while (d = EarthlingCruiser(t.Next())) {
        d.thrust(e.Args[0]);
      }
    }
   }
 }

class BattleScreen : Actor {
  Spaceship playerShip;
  Vector2 origin;

  Default {
    +NOGRAVITY;
    +WALLSPRITE;
  }

  States {
    Spawn:
      TNT1 A 0;
      TNT1 A 0 {
        //self.A_SetRenderStyle(0.5, STYLE_Translucent);
        EarthlingCruiser cruiser = EarthlingCruiser(Spawn("EarthlingCruiser", self.pos, NO_REPLACE));
        cruiser.setuPosition((0,0));
        self.playerShip = cruiser;

        Nemesis nemesis = Nemesis(Spawn("Nemesis", self.pos, NO_REPLACE));
        nemesis.setuPosition((300,300));
        nemesis.setTarget(cruiser);
        nemesis.setZIndex(0.09);

        for (int i = 0; i < 50; i++) {
          ParallaxStar star = ParallaxStar(Spawn("ParallaxStar", self.pos, NO_REPLACE));
          star.setposMultiplyFactor(-1.0);
          star.setZIndex(0.02);
          star.setuPosition((Random(-100, 100),Random(-100, 100)));
          if (Random(0, 2) <= 1) {
            star.setposMultiplyFactor(-0.25);
            star.setZIndex(0.01);
          }
        }
      }
      SPAC A -1;
      stop;
  }

  override void PostBeginPlay() {
    origin = (0,0);
  }

  override void Tick() {
    if (self.playerShip) {
      origin = self.playerShip.uPosition;
    }
    Super.Tick();
  }
}
