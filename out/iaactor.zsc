class IAActor : Actor {
  Vector2 uPosition;
  BattleScreen battleScreen;
  int ang;
  float zIndex;

  Default {
    +NOGRAVITY;
    +WALLSPRITE;
    +DONTINTERPOLATE;
  }

  override void PostBeginPlay()
  {
    ang = 0;
    ThinkerIterator t = ThinkerIterator.Create("BattleScreen");
    Actor b;
    while (b = BattleScreen(t.Next())) {
      self.battleScreen = BattleScreen(b);
    }
    self.angle = self.battleScreen.angle + 180; // bit hacky but.. *shrug* should not add 180 to this and instead fix in sprites/textures?
    if (zIndex == 0) {
      zIndex = 0.1;
    }
  }

  void setuPosition(Vector2 position) {
    self.uPosition = position;
  }

  void setZIndex(float z) {
    self.zIndex = z;
  }

  void updateStateFromAngle() {
    if (ang < 0) {
      ang = ang + 16;
    }
    if (ang > 15) {
      ang = ang - 16;
    }

    // Console.Printf("%i", ang);

    if (ang == 0) {
      SetState(ResolveState("S0"));
    }
    if (ang == 1) {
      SetState(ResolveState("S1"));
    }
    if (ang == 2) {
      SetState(ResolveState("S2"));
    }
    if (ang == 3) {
      SetState(ResolveState("S3"));
    }
    if (ang == 4) {
      SetState(ResolveState("S4"));
    }
    if (ang == 5) {
      SetState(ResolveState("S5"));
    }
    if (ang == 6) {
      SetState(ResolveState("S6"));
    }
    if (ang == 7) {
      SetState(ResolveState("S7"));
    }
    if (ang == 8) {
      SetState(ResolveState("S8"));
    }
    if (ang == 9) {
      SetState(ResolveState("S9"));
    }
    if (ang == 10) {
      SetState(ResolveState("S10"));
    }
    if (ang == 11) {
      SetState(ResolveState("S11"));
    }
    if (ang == 12) {
      SetState(ResolveState("S12"));
    }
    if (ang == 13) {
      SetState(ResolveState("S13"));
    }
    if (ang == 14) {
      SetState(ResolveState("S14"));
    }
    if (ang == 15) {
      SetState(ResolveState("S15"));
    }
  }

  virtual Vector2 getUniversePosition() {
    return self.uPosition;
  }

  virtual Vector3 getDoomWorldPosition() {
    if (self.battleScreen != null) {
        Vector2 uP = self.getUniversePosition();
        float x = self.battleScreen.origin.x - uP.x;
        float a = self.battleScreen.angle - 90;
        float b = self.battleScreen.angle; // to prevent z-fighting
        float newX = self.battleScreen.pos.x - (Cos(a) * x) + (Cos(b) * zIndex);
        float newY = self.battleScreen.pos.y - (Sin(a) * x) + (Sin(b) * zIndex);
        float newZ = self.battleScreen.pos.z - (self.battleScreen.origin.y - uP.y);
        return (newX, newY, newZ);
    }
    return (0,0,0);
  }

  override void Tick() {
    updateStateFromAngle();
    SetXYZ(getDoomWorldPosition());
  }
}
